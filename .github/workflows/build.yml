name: Build Electron App

on:
  workflow_dispatch: 

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: app/package-lock.json
        timeout-minutes: 10
      
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libglib2.0-dev rpm
      
      - name: Create macOS entitlements file
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p ./app/build
          cat > ./app/build/entitlements.mac.plist << EOL
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
            <dict>
              <key>com.apple.security.cs.allow-jit</key>
              <true/>
              <key>com.apple.security.cs.allow-unsigned-executable-memory</key>
              <true/>
              <key>com.apple.security.cs.disable-library-validation</key>
              <true/>
              <key>com.apple.security.files.user-selected.read-write</key>
              <true/>
              <key>com.apple.security.automation.apple-events</key>
              <true/>
            </dict>
          </plist>
          EOL
      
      - name: Install dependencies
        working-directory: ./app
        run: npm ci
      
      - name: Build Electron app for Windows/Linux
        if: matrix.os != 'macos-latest'
        working-directory: ./app
        run: npm run electron:build
      
      - name: Build Electron app for macOS (unsigned)
        if: matrix.os == 'macos-latest'
        working-directory: ./app
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
        run: npm run electron:build
      
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: app/dist/*.exe
          if-no-files-found: warn
      
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: app/dist/*.dmg
          if-no-files-found: warn
      
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            app/dist/*.AppImage
            app/dist/*.deb
            app/dist/*.rpm
          if-no-files-found: warn
